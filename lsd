#!/usr/bin/env bash
# Display directory tree. Wrapper for 'tree' command.

lsd() {
  local -i level=1
  local -i show_all=0
  local -a ls_opts=()
  local -a cmd=()

  while (($#)); do case "$1" in
    -a|--all)     show_all=1 ;;
    -A)           show_all=1
                  ls_opts=( -pugsD --timefmt=%y-%m-%dT%R )
                  ;;
    # -pugsD options (no long equivalents): permissions, user, group, size, date
    --ls|-ls)     ls_opts=( -pugsD --timefmt=%y-%m-%dT%R ) ;;
    -m|--maxdepth|-L|-l|--level)
                  shift
                  [[ "${1:-}" =~ ^[0-9]+$ ]] || {
                    >&2 echo "${SCRIPT_NAME:-${FUNCNAME[0]}}: error: Invalid level '$1'"
                    return 22
                  }
                  level=$1 ;;
    -[1-9])       level=${1:1} ;;
    -n|--nocolor) cmd+=(-n) ;;
    -C|--color)   cmd+=(-C) ;;
    -V|--version) echo "${SCRIPT_NAME:-${FUNCNAME[0]}} ${VERSION:-unknown}"
                  return 0 ;;
    -h|--help)    lsd_usage || \
                    >&2 echo "${FUNCNAME[0]} cannot show help as sourced module"
                  return 0
                  ;;
    --|--tree)    shift; cmd+=( "$@" ); break ;;
    -[123456789aAmlLnCVh]*) #shellcheck disable=SC2046 # expand aggregated short options
                  set -- '' $(printf -- "-%c " $(grep -o . <<<"${1:1}")) "${@:2}" ;;
    *)            cmd+=( "$1" ) ;;
  esac; shift; done
  (( ${#cmd[@]} )) || cmd=( '.' )

  # Check for tree command availability
  command -v tree >/dev/null || {
    >&2 echo "${FUNCNAME[0]}: error: tree command not found"
    >&2 echo "sudo apt install tree"
    return 127
  }

  local -a tree_opts=(-L "$level")
  ((show_all)) || tree_opts+=(-d)
  tree "${tree_opts[@]}" "${ls_opts[@]}" --dirsfirst "${cmd[@]}"
}
declare -fx lsd

if [[ ${BASH_SOURCE[0]} == "$0" ]]; then
  set -euo pipefail
  shopt -s inherit_errexit shift_verbose

  VERSION=1.1
  SCRIPT_PATH=$(readlink -en -- "$0")
  SCRIPT_NAME=${SCRIPT_PATH##*/}
  readonly -- VERSION SCRIPT_PATH SCRIPT_NAME

  lsd_usage() {
    cat <<EOT
$SCRIPT_NAME $VERSION - Display directory tree (wrapper for tree)

Usage: $SCRIPT_NAME [OPTIONS] [PATH...] [--|--tree TREE_OPTIONS]

  PATH          Directory path(s) to display (default: current directory)

Options:
  -a, --all                 Show files and directories (default: dirs only)
  -A                        Same as -a --ls; full listing for all files/dirs
  -m, --maxdepth, -L, -l,   Maximum depth to traverse (default: 1)
      --level NUM
  -1 through -9             Shortcut for level depth (e.g., -3 = 3 levels)
  --ls, -ls                 Show detailed listing (permissions, size, date)
  -n, --nocolor             Disable color output
  -C, --color               Force color output (default if terminal)
  --, --tree                Pass remaining options to tree command
  -V, --version             Show version information
  -h, --help                Show this help message

Examples:
  $SCRIPT_NAME                  # Current dir, dirs only, 1 level
  $SCRIPT_NAME -a               # Include files
  $SCRIPT_NAME -A               # Full ls listing for all files and dirs
  $SCRIPT_NAME -3 /var          # 3 levels deep
  $SCRIPT_NAME -L 5 /home       # 5 levels deep (same as -m 5)
  $SCRIPT_NAME -AC2 ~           # Files+dirs, color, 2 levels, detailed ls
  $SCRIPT_NAME -- -L 5 -I .git  # Pass options to tree

Requires: tree command
EOT
  }

  lsd "$@"
fi

#fin
